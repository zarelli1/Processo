#!/usr/bin/env python3
"""
Teste r√°pido da automa√ß√£o - apenas an√°lise e shorts
"""

import os
from video_processor import VideoProcessor
from short_creator import ShortCreator

def quick_test():
    """Teste r√°pido com v√≠deo j√° baixado"""
    
    # Verificar se o v√≠deo foi baixado
    downloads_dir = "./downloads"
    video_files = [f for f in os.listdir(downloads_dir) if f.endswith('.mp4')]
    
    if not video_files:
        print("‚ùå Nenhum v√≠deo encontrado na pasta downloads")
        return
    
    video_path = os.path.join(downloads_dir, video_files[0])
    print(f"üìÅ Usando v√≠deo: {video_files[0]}")
    
    try:
        # Processar v√≠deo
        processor = VideoProcessor()
        print("üîÑ Carregando v√≠deo...")
        result = processor.load_video(video_path)
        
        if result and result['validation']['is_valid']:
            print(f"‚úÖ V√≠deo carregado: {result['duration']:.1f}s")
            
            # Criar shorts usando m√©todo simples
            print("üé¨ Criando shorts...")
            creator = ShortCreator()
            
            # Criar 3 shorts de 60s cada
            shorts = creator.create_shorts_simple(
                video_path=video_path,
                num_shorts=3,
                duration=60,
                output_dir="./shorts"
            )
            
            if shorts:
                print(f"‚úÖ {len(shorts)} shorts criados com sucesso!")
                for short in shorts:
                    print(f"   üìÅ {short['filename']}")
            else:
                print("‚ùå Falha na cria√ß√£o dos shorts")
                
        else:
            print("‚ùå V√≠deo inv√°lido ou n√£o processado")
            
    except Exception as e:
        print(f"‚ùå Erro: {str(e)}")

if __name__ == "__main__":
    quick_test()